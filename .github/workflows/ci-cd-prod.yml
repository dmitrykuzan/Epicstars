# name: CI/CD

# on:
#   push:
#     branches: [main]
#   workflow_dispatch:

# env:
#   PROJECT_DIR: apps/automriya.com
#   PROJECT_NAME: automriya-prod

# jobs:
#   main:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: "read"
#       actions: "read"
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0

#       - name: Create env file
#         run: |
#           echo "${{ secrets.ENV_PRODUCTION_LOCAL }}" > .env.production.local

#       - name: Set SHA for "nx affected" commands
#         uses: nrwl/nx-set-shas@v3
#         with:
#           main-branch-name: main
#           set-environment-variables-for-job: true
#           last-successful-event: push
#           working-directory: .

#       - name: Install dependencies
#         run: yarn install --frozen-lockfile

#       - name: Check files formatting
#         run: yarn nx affected -t format:check --parallel=3

#       - name: Check ESLint errors
#         run: yarn nx affected -t lint --parallel=3

#       - name: Login to Container registry
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ secrets.CR_URL }}
#           username: ${{ secrets.DO_TOKEN }}
#           password: ${{ secrets.DO_TOKEN }}

#       - name: Deploy to registry
#         run: yarn nx affected -t deploy:registry --args="--registry_url=${{ secrets.CR_URL }}" --parallel=3

#       # - name: Add IP address to trusted source (managed database)
#       #   uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
#       #   with:
#       #     action: "add"
#       #     database_id: ${{ secrets.DO_DB_ID }}
#       #     digitalocean_token: ${{ secrets.DO_TOKEN }}

#       - name: Make migrations
#         run: POSTGRES_URL_POOL=${{ secrets.DB_URL }} POSTGRES_URL_SHADOW_POOL=${{ secrets.DB_URL }} POSTGRES_URL_DIRECT=${{ secrets.DB_URL }} yarn prisma:prod migrate deploy

#       # - name: Remove IP address to trusted source (managed database)
#       #   uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
#       #   with:
#       #     action: "remove"
#       #     database_id: ${{ secrets.DO_DB_ID }}
#       #     digitalocean_token: ${{ secrets.DO_TOKEN }}

#       - name: Rebuild project
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_HOSTNAME }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           key: ${{ secrets.SSH_KEY }}
#           port: ${{ secrets.SSH_PORT }}
#           passphrase: ${{ secrets.SSH_PASSPHRASE }}
#           command_timeout: 30m
#           script: |
#             cd ${{ env.PROJECT_DIR }}
#             echo ${{ secrets.SSH_PASSPHRASE }} | sudo -S docker-compose -f docker-compose.prod.yml --env-file=./.env.production.local -p ${{ env.PROJECT_NAME }} pull
#             echo ${{ secrets.SSH_PASSPHRASE }} | sudo -S docker-compose -f docker-compose.prod.yml --env-file=./.env.production.local -p ${{ env.PROJECT_NAME }} up -d --build
